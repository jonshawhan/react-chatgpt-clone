{"ast":null,"code":"import{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[value,setValue]=useState(null);const[message,setMessage]=useState(null);const[previousChats,setPreviousChats]=useState([]);const[currentTitle,setCurrentTitle]=useState(null);const createNewChat=()=>{setMessage(null);setValue(\"\");setCurrentTitle(null);};const handleClick=uniqueTitle=>{setCurrentTitle(uniqueTitle);setMessage(null);setValue(\"\");};const getMessages=async()=>{const options={method:\"POST\",body:JSON.stringify({message:value}),headers:{\"Content-Type\":\"application/json\"}};try{const response=await fetch('http://localhost:8000/completions',options);const data=await response.json();setMessage(data.choices[0].message);}catch(error){console.error(error);}};useEffect(()=>{console.log(currentTitle,value,message);if(!currentTitle&&value&&message){setCurrentTitle(value);}if(currentTitle&&value&&message){setPreviousChats(prevChats=>[...prevChats,{title:currentTitle,role:\"user\",content:value},{title:currentTitle,role:message.role,content:message.content}]);}},[message,currentTitle]);console.log(previousChats);const currentChat=previousChats.filter(previousChat=>previousChat.title===currentTitle);const uniqueTitles=Array.from(new Set(previousChats.map(previousChat=>previousChat.title)));console.log(uniqueTitles);return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"side-bar\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:createNewChat,children:\"+ New Chat\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"history\",children:uniqueTitles===null||uniqueTitles===void 0?void 0:uniqueTitles.map((uniqueTitle,index)=>/*#__PURE__*/_jsx(\"li\",{onClick:()=>handleClick(uniqueTitle),children:uniqueTitle},index))}),/*#__PURE__*/_jsx(\"nav\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"Made by Jon\"})})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"main\",children:[!currentTitle&&/*#__PURE__*/_jsx(\"h1\",{children:\"JonGPT\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"feed\",children:currentChat.map((chatMessage,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"role\",children:chatMessage.role}),/*#__PURE__*/_jsx(\"p\",{children:chatMessage.content})]},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"bottom-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"input\",{value:value,onChange:e=>setValue(e.target.value)}),/*#__PURE__*/_jsx(\"div\",{id:\"submit\",onClick:getMessages,children:\"\\u27A3\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"info\",children:\"ChatGPT version 4o. Your feedback will help us improve.\"})]})]})]});};export default App;","map":{"version":3,"names":["useState","useEffect","jsx","_jsx","jsxs","_jsxs","App","value","setValue","message","setMessage","previousChats","setPreviousChats","currentTitle","setCurrentTitle","createNewChat","handleClick","uniqueTitle","getMessages","options","method","body","JSON","stringify","headers","response","fetch","data","json","choices","error","console","log","prevChats","title","role","content","currentChat","filter","previousChat","uniqueTitles","Array","from","Set","map","className","children","onClick","index","chatMessage","onChange","e","target","id"],"sources":["/Users/jonshawhan/Desktop/Projects/react-gpt-clone/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nconst App = () => {\n    const [ value, setValue] = useState(null)\n    const [ message, setMessage] = useState(null)\n    const [ previousChats, setPreviousChats] = useState([])\n    const [ currentTitle, setCurrentTitle] = useState(null)\n\n    const createNewChat = () => {\n      setMessage(null)\n      setValue(\"\")\n      setCurrentTitle(null)\n    }\n\n    const handleClick = (uniqueTitle) => {\n      setCurrentTitle(uniqueTitle)\n      setMessage(null)\n      setValue(\"\")\n    }\n\n    const getMessages = async () => {\n        const options = {\n          method: \"POST\",\n          body : JSON.stringify({\n            message: value\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n        try {\n            const response = await fetch('http://localhost:8000/completions', options)\n            const data = await response.json()\n            setMessage(data.choices[0].message)\n        } catch (error) {\n          console.error(error)\n        }\n\n    }\n\n    useEffect(() => {\n        console.log(currentTitle, value, message)\n        if (!currentTitle && value && message) {\n          setCurrentTitle(value)\n        }\n        if (currentTitle && value && message) {\n          setPreviousChats(prevChats => (\n            [...prevChats, \n              {\n                title: currentTitle,\n                role: \"user\",\n                content: value\n              },\n              {\n                  title: currentTitle,\n                  role: message.role,\n                  content: message.content\n              }\n            ]\n          ))\n        }\n    }, [message, currentTitle])\n\n    console.log(previousChats)\n\n    const currentChat = previousChats.filter(previousChat => previousChat.title === currentTitle)\n    const uniqueTitles = Array.from(new Set(previousChats.map(previousChat => previousChat.title)))\n\n    console.log(uniqueTitles)\n\n  return (\n    <div className=\"app\">\n      <section className=\"side-bar\">\n        <button onClick={createNewChat}>+ New Chat</button>\n        <ul className=\"history\">\n          {uniqueTitles?.map((uniqueTitle, index) => <li key={index} onClick={() => handleClick(uniqueTitle)}>{uniqueTitle}</li>)}\n        </ul>\n        <nav>\n          <p>Made by Jon</p>\n        </nav>\n      </section>\n      <section className=\"main\">\n        {!currentTitle && <h1>JonGPT</h1>}\n        <ul className=\"feed\">\n            {currentChat.map((chatMessage, index) => <li key={index}>\n              <p className=\"role\">{chatMessage.role}</p>\n              <p>{chatMessage.content}</p>\n            </li>)}\n        </ul>\n        <div className=\"bottom-section\">\n            <div className=\"input-container\">\n              <input value={value} onChange={(e) => setValue(e.target.value)}/>\n              <div id=\"submit\" onClick={getMessages}>âž£</div>\n            </div>\n            <p className=\"info\">\n              ChatGPT version 4o. Your feedback will help us improve.\n            </p>\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}